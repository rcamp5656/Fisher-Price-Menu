/* This file has been generated by "music box tune tracker" v1.0 on 04 Jan 2020 09:38
 * https://github.com/odrevet/music-box-tune-tracker
 * using "Fred's Fisher Price record creator" .scad template file
 * http://www.instructables.com/id/3D-printing-records-for-a-Fisher-Price-toy-record-/
 */

// Configuration
$fn = 100;
hStock = 3;
rStock = 60.58;
oDrive = 21.8;
rDrive = 1.55;
hInset = 1;
rInset = 25.6;
hGroove = 1.2;
overlap = 0.2;

hasSecondSide = 0;

// Create disc
module createDisc() {
	union() {

		createBlank();

		// Add the notes for the song. This part is dynamically generated.
		pin(27.95,29.15,-3.9997053761314016,0);
		pin(27.95,29.15,121.58168997270585,0);
		pin(27.95,29.15,247.16308532154304,0);
		pin(29.15,30.349999999999998,0.3212384500371942,0);
		pin(29.15,30.349999999999998,117.53054077561858,0);
		pin(29.15,30.349999999999998,125.9026337988744,0);
		pin(29.15,30.349999999999998,243.1119361244558,0);
		pin(29.15,30.349999999999998,251.48402914771165,0);
		pin(30.69,31.89,4.721517711813806,0);
		pin(30.69,31.89,113.5587270141394,0);
		pin(30.69,31.89,130.302913060651,0);
		pin(30.69,31.89,239.1401223629766,0);
		pin(30.69,31.89,255.88430840948826,0);
		pin(31.89,33.09,9.020271087024362,0);
		pin(31.89,33.09,109.48538736609413,0);
		pin(31.89,33.09,134.60166643586157,0);
		pin(31.89,33.09,235.06678271493138,0);
		pin(31.89,33.09,260.1830617846988,0);
		pin(33.51,34.71,13.39453509573219,0);
		pin(33.51,34.71,105.48755835154614,0);
		pin(33.51,34.71,138.9759304445694,0);
		pin(33.51,34.71,231.0689537003834,0);
		pin(33.51,34.71,264.5573257934066,0);
		pin(34.71,35.910000000000004,17.675715119168657,0);
		pin(34.71,35.910000000000004,101.3966453517268,0);
		pin(34.71,35.910000000000004,143.2571104680059,0);
		pin(34.71,35.910000000000004,226.97804070056407,0);
		pin(34.71,35.910000000000004,268.8385058168431,0);
		pin(34.71,35.910000000000004,352.55943604940126,0);
		pin(36.224999999999994,37.425,22.012919312796157,0);
		pin(36.224999999999994,37.425,97.36175652209847,0);
		pin(36.224999999999994,37.425,147.59431466163338,0);
		pin(36.224999999999994,37.425,222.9431518709357,0);
		pin(36.224999999999994,37.425,273.1757100104706,0);
		pin(36.224999999999994,37.425,348.5245472197729,0);
		pin(54.11,55.31,52.320242464270926,0);
		pin(54.11,55.31,69.06442851078256,0);
		pin(54.11,55.31,177.90163781310815,0);
		pin(54.11,55.31,194.64582385961978,0);
		pin(54.11,55.31,303.48303316194534,0);
		pin(54.11,55.31,320.22721920845703,0);
		pin(55.699999999999996,56.9,56.572885931830335,0);
		pin(55.699999999999996,56.9,64.94497895508616,0);
		pin(55.699999999999996,56.9,182.15428128066756,0);
		pin(55.699999999999996,56.9,190.52637430392335,0);
		pin(55.699999999999996,56.9,307.7356766295047,0);
		pin(55.699999999999996,56.9,316.10776965276057,0);
		pin(56.9,58.1,60.79432905026941,0);
		pin(56.9,58.1,186.37572439910662,0);
		pin(56.9,58.1,311.95711974794386,0);

		title("test2",0);


	}
}

// Create the blank, ready for dynamically added pins
module createBlank() {

	difference() {

		// stock
		cylinder(h=hStock, r=rStock);

		// top cutout
		translate(v = [0,0,hStock-hInset+overlap]) {
			cylinder(h=hInset + overlap, r=rInset);
		}

		// Bottom cutout lets the disc sit flatter, but some printers my struggle with the overhang
		translate(v = [0,0,-overlap]) {
			cylinder(h=hInset + overlap, r=rInset);
		}

		// Centre hole
		cylinder(h=hStock, r=3.22);

		// Drive holes
		translate(v = [0,oDrive,0]) { cylinder(h=hStock, r=rDrive); }
		translate(v = [0,-oDrive,0]) { cylinder(h=hStock, r=rDrive); }
		translate(v = [oDrive,0,0]) { cylinder(h=hStock, r=rDrive); }
		translate(v = [-oDrive,0,0]) { cylinder(h=hStock, r=rDrive); }

		// Tracks - each one for two notes
		track(28.15, 0);
		track(30.89, 0);
		track(33.71, 0);
		track(36.425, 0);
		track(39.225, 0);
		track(42, 0);
		track(44.825, 0);
		track(47.555, 0);
		track(50.315, 0);
		track(53.11, 0);
		track(55.9, 0);

		if (hasSecondSide > 0) {
			track(28.15, 1);
			track(30.89, 1);
			track(33.71, 1);
			track(36.425, 1);
			track(39.225, 1);
			track(42, 1);
			track(44.825, 1);
			track(47.555, 1);
			track(50.315, 1);
			track(53.11, 1);
			track(55.9, 1);
		}
	}
}

// Negative for a double track
module track(inner, onSecondSide) {
	if (onSecondSide > 0) {
		translate(v = [0,0,-overlap]) {
			difference() {
				cylinder(h=hGroove+overlap, r=inner+2);
				cylinder(h=hGroove+overlap, r=inner);
			}
		}
	}
	else {
		translate(v = [0,0,hStock-hGroove]) {
			difference() {
				cylinder(h=hGroove+overlap, r=inner+2);
				cylinder(h=hGroove+overlap, r=inner);
			}
		}
	}

}

// Create a pin at a certain angle
module pin(inner, outer, angle, onSecondSide)
{
	rotate(a=angle) {
		if (onSecondSide > 0) {
			translate(v=[inner, -0.5, - overlap]) {
				# cube (size=[outer-inner, 1 ,hGroove + overlap], center=false);
			}
		} else {
			translate(v=[inner, -0.5, hStock - hGroove - overlap]) {
				# cube (size=[outer-inner, 1 ,hGroove + overlap], center=false);
			}
		}
	}
}

// Add text
module title(text, onSecondSide)
{
// Disabled as some people had trouble with it
//	if (onSecondSide>0)
//		writecylinder(text, [0,0,-hInset], radius=20, height=hStock-hInset, h=3, t=hInset, face="bottom");
//	else
//		writecylinder(text, [0,0,0], radius=20, height=hStock-hInset, h=3, t=hInset, face="top");
}

// Do the work
createDisc();
