/* This file has been generated by Fred's Fisher Price record creator v2.1.0.0 on 04 Jan 2020 13:50
 * http://www.instructables.com/id/3D-printing-records-for-a-Fisher-Price-toy-record-/
 *
 * Press F6 to view your model in OpenSCAD
 * Then you cn export as STL for printing
 */

// Configuration
$fn = 100;
hStock = 3;
rStock = 60.58;
oDrive = 21.8;
rDrive = 1.55;
hInset = 1;
rInset = 25.6;
hGroove = 1.2;
overlap = 0.2;

hasSecondSide = 0;

// Some very useful code by HarlanDMii
// http://www.thingiverse.com/thing:16193
// Disabled as some people had problems with it
// use <write.scad>

// Create disc
module createDisc() {
	union() {

		createBlank();

		// Add the notes for the song. This part is dynamically generated.
		// Autogenerated pins for music tracks
		pin(30.69,31.89,-3.65057531144201,0);
		pin(30.69,31.89,4.72151771181381,0);
		pin(30.69,31.89,13.0936107350696,0);
		pin(30.69,31.89,21.4657037583254,0);
		pin(30.69,31.89,29.8377967815813,0);
		pin(30.69,31.89,38.2098898048371,0);
		pin(30.69,31.89,46.5819828280929,0);
		pin(30.69,31.89,54.9540758513487,0);
		pin(30.69,31.89,63.3261688746045,0);
		pin(30.69,31.89,71.6982618978603,0);
		pin(30.69,31.89,80.0703549211161,0);
		pin(30.69,31.89,88.442447944372,0);
		pin(30.69,31.89,96.8145409676278,0);
		pin(30.69,31.89,105.186633990884,0);
		pin(30.69,31.89,113.558727014139,0);
		pin(30.69,31.89,121.930820037395,0);
		pin(30.69,31.89,130.302913060651,0);
		pin(30.69,31.89,138.675006083907,0);
		pin(30.69,31.89,147.047099107163,0);
		pin(30.69,31.89,155.419192130418,0);
		pin(30.69,31.89,163.791285153674,0);
		pin(30.69,31.89,172.16337817693,0);
		pin(30.69,31.89,180.535471200186,0);
		pin(30.69,31.89,188.907564223442,0);
		pin(30.69,31.89,197.279657246698,0);
		pin(30.69,31.89,205.651750269953,0);
		pin(30.69,31.89,214.023843293209,0);
		pin(30.69,31.89,222.395936316465,0);
		pin(30.69,31.89,230.768029339721,0);
		pin(30.69,31.89,239.140122362977,0);
		pin(30.69,31.89,247.512215386232,0);
		pin(30.69,31.89,255.884308409488,0);
		pin(30.69,31.89,264.256401432744,0);
		pin(30.69,31.89,272.628494456,0);
		pin(30.69,31.89,281.000587479256,0);
		pin(30.69,31.89,289.372680502512,0);
		pin(30.69,31.89,297.744773525767,0);
		pin(30.69,31.89,306.116866549023,0);
		pin(30.69,31.89,314.488959572279,0);
		pin(30.69,31.89,322.861052595535,0);
		pin(30.69,31.89,331.233145618791,0);
		pin(30.69,31.89,339.605238642046,0);
		pin(30.69,31.89,347.977331665302,0);

		title("TEST",0);


	}
}

// Create the blank, ready for dynamically added pins
module createBlank() {

	difference() {
	
		// stock
		cylinder(h=hStock, r=rStock);
	
		// top cutout
		translate(v = [0,0,hStock-hInset+overlap]) {
			cylinder(h=hInset + overlap, r=rInset);
		}

		// Bottom cutout lets the disc sit flatter, but some printers my struggle with the overhang
		translate(v = [0,0,-overlap]) {
			cylinder(h=hInset + overlap, r=rInset);
		}
		
		// Centre hole
		cylinder(h=hStock, r=3.22);

		// Drive holes
		translate(v = [0,oDrive,0]) { cylinder(h=hStock, r=rDrive); }
		translate(v = [0,-oDrive,0]) { cylinder(h=hStock, r=rDrive); }
		translate(v = [oDrive,0,0]) { cylinder(h=hStock, r=rDrive); }
		translate(v = [-oDrive,0,0]) { cylinder(h=hStock, r=rDrive); }

		// Tracks - each one for two notes
		track(28.15, 0);
		track(30.89, 0);
		track(33.71, 0);
		track(36.425, 0);
		track(39.225, 0);
		track(42, 0);
		track(44.825, 0);
		track(47.555, 0);
		track(50.315, 0);
		track(53.11, 0);
		track(55.9, 0);

		if (hasSecondSide > 0) {
			track(28.15, 1);
			track(30.89, 1);
			track(33.71, 1);
			track(36.425, 1);
			track(39.225, 1);
			track(42, 1);
			track(44.825, 1);
			track(47.555, 1);
			track(50.315, 1);
			track(53.11, 1);
			track(55.9, 1);
		}
	}
}

// Negative for a double track
module track(inner, onSecondSide) {
	if (onSecondSide > 0) {
		translate(v = [0,0,-overlap]) {
			difference() {
				cylinder(h=hGroove+overlap, r=inner+2);
				cylinder(h=hGroove+overlap, r=inner);
			}
		}
	}
	else {
		translate(v = [0,0,hStock-hGroove]) {
			difference() {
				cylinder(h=hGroove+overlap, r=inner+2);
				cylinder(h=hGroove+overlap, r=inner);
			}
		}
	}

}

// Create a pin at a certain angle
module pin(inner, outer, angle, onSecondSide)
{
	rotate(a=angle) {
		if (onSecondSide > 0) {
			translate(v=[inner, -0.5, - overlap]) {
				# cube (size=[outer-inner, 1 ,hGroove + overlap], center=false);
			}
		} else {
			translate(v=[inner, -0.5, hStock - hGroove - overlap]) {
				# cube (size=[outer-inner, 1 ,hGroove + overlap], center=false);
			}
		}
	}
}

// Add text
module title(text, onSecondSide)
{
// Disabled as some people had trouble with it
//	if (onSecondSide>0)
//		writecylinder(text, [0,0,-hInset], radius=20, height=hStock-hInset, h=3, t=hInset, face="bottom");
//	else
//		writecylinder(text, [0,0,0], radius=20, height=hStock-hInset, h=3, t=hInset, face="top");
}

// Do the work
createDisc();
