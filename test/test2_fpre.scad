/* This file has been generated by Fred's Fisher Price record creator v2.1.0.0 on 04 Jan 2020 13:51
 * http://www.instructables.com/id/3D-printing-records-for-a-Fisher-Price-toy-record-/
 *
 * Press F6 to view your model in OpenSCAD
 * Then you cn export as STL for printing
 */

// Configuration
$fn = 100;
hStock = 3;
rStock = 60.58;
oDrive = 21.8;
rDrive = 1.55;
hInset = 1;
rInset = 25.6;
hGroove = 1.2;
overlap = 0.2;

hasSecondSide = 0;

// Some very useful code by HarlanDMii
// http://www.thingiverse.com/thing:16193
// Disabled as some people had problems with it
// use <write.scad>

// Create disc
module createDisc() {
	union() {

		createBlank();

		// Add the notes for the song. This part is dynamically generated.
		// Autogenerated pins for music tracks
		pin(27.95,29.15,-3.9997053761314,0);
		pin(27.95,29.15,121.581689972706,0);
		pin(27.95,29.15,247.163085321543,0);
		pin(29.15,30.35,0.321238450037194,0);
		pin(29.15,30.35,117.530540775619,0);
		pin(29.15,30.35,125.902633798874,0);
		pin(29.15,30.35,243.111936124456,0);
		pin(29.15,30.35,251.484029147712,0);
		pin(30.69,31.89,4.72151771181381,0);
		pin(30.69,31.89,113.558727014139,0);
		pin(30.69,31.89,130.302913060651,0);
		pin(30.69,31.89,239.140122362977,0);
		pin(30.69,31.89,255.884308409488,0);
		pin(31.89,33.09,9.02027108702436,0);
		pin(31.89,33.09,109.485387366094,0);
		pin(31.89,33.09,134.601666435862,0);
		pin(31.89,33.09,235.066782714931,0);
		pin(31.89,33.09,260.183061784699,0);
		pin(33.51,34.71,13.3945350957322,0);
		pin(33.51,34.71,105.487558351546,0);
		pin(33.51,34.71,138.975930444569,0);
		pin(33.51,34.71,231.068953700383,0);
		pin(33.51,34.71,264.557325793407,0);
		pin(34.71,35.91,17.6757151191687,0);
		pin(34.71,35.91,101.396645351727,0);
		pin(34.71,35.91,143.257110468006,0);
		pin(34.71,35.91,226.978040700564,0);
		pin(34.71,35.91,268.838505816843,0);
		pin(34.71,35.91,352.559436049401,0);
		pin(36.225,37.425,22.0129193127962,0);
		pin(36.225,37.425,97.3617565220985,0);
		pin(36.225,37.425,147.594314661633,0);
		pin(36.225,37.425,222.943151870936,0);
		pin(36.225,37.425,273.175710010471,0);
		pin(36.225,37.425,348.524547219773,0);
		pin(37.425,38.625,26.2807946907911,0);
		pin(37.425,38.625,151.862190039628,0);
		pin(37.425,38.625,277.443585388466,0);
		pin(39.025,40.225,93.3944490241778,0);
		pin(39.025,40.225,218.975844373015,0);
		pin(39.025,40.225,344.557239721852,0);
		pin(40.225,41.425,30.6745830438848,0);
		pin(40.225,41.425,156.255978392722,0);
		pin(40.225,41.425,281.837373741559,0);
		pin(41.8,43,89.3967512787277,0);
		pin(41.8,43,214.978146627565,0);
		pin(41.8,43,340.559541976402,0);
		pin(43,44.2,35.040129891406,0);
		pin(43,44.2,160.621525240243,0);
		pin(43,44.2,286.20292058908,0);
		pin(44.625,45.825,85.3787570193948,0);
		pin(44.625,45.825,210.960152368232,0);
		pin(44.625,45.825,336.541547717069,0);
		pin(45.825,47.025,39.3868211006036,0);
		pin(45.825,47.025,164.968216449441,0);
		pin(45.825,47.025,290.549611798278,0);
		pin(47.355,48.555,81.3363384309524,0);
		pin(47.355,48.555,206.91773377979,0);
		pin(47.355,48.555,332.499129128627,0);
		pin(48.555,49.755,43.7105304022182,0);
		pin(48.555,49.755,169.291925751055,0);
		pin(48.555,49.755,294.873321099893,0);
		pin(50.115,51.315,77.2798102381758,0);
		pin(50.115,51.315,202.861205587013,0);
		pin(50.115,51.315,328.44260093585,0);
		pin(51.315,52.515,48.0210062911094,0);
		pin(51.315,52.515,173.602401639947,0);
		pin(51.315,52.515,299.183796988784,0);
		pin(52.91,54.11,73.2113337766188,0);
		pin(52.91,54.11,198.792729125456,0);
		pin(52.91,54.11,324.374124474293,0);
		pin(54.11,55.31,52.3202424642709,0);
		pin(54.11,55.31,69.0644285107826,0);
		pin(54.11,55.31,177.901637813108,0);
		pin(54.11,55.31,194.64582385962,0);
		pin(54.11,55.31,303.483033161945,0);
		pin(54.11,55.31,320.227219208457,0);
		pin(55.7,56.9,56.5728859318303,0);
		pin(55.7,56.9,64.9449789550862,0);
		pin(55.7,56.9,182.154281280668,0);
		pin(55.7,56.9,190.526374303923,0);
		pin(55.7,56.9,307.735676629505,0);
		pin(55.7,56.9,316.107769652761,0);
		pin(56.9,58.1,60.7943290502694,0);
		pin(56.9,58.1,186.375724399107,0);
		pin(56.9,58.1,311.957119747944,0);

		title("TEST2",0);


	}
}

// Create the blank, ready for dynamically added pins
module createBlank() {

	difference() {
	
		// stock
		cylinder(h=hStock, r=rStock);
	
		// top cutout
		translate(v = [0,0,hStock-hInset+overlap]) {
			cylinder(h=hInset + overlap, r=rInset);
		}

		// Bottom cutout lets the disc sit flatter, but some printers my struggle with the overhang
		translate(v = [0,0,-overlap]) {
			cylinder(h=hInset + overlap, r=rInset);
		}
		
		// Centre hole
		cylinder(h=hStock, r=3.22);

		// Drive holes
		translate(v = [0,oDrive,0]) { cylinder(h=hStock, r=rDrive); }
		translate(v = [0,-oDrive,0]) { cylinder(h=hStock, r=rDrive); }
		translate(v = [oDrive,0,0]) { cylinder(h=hStock, r=rDrive); }
		translate(v = [-oDrive,0,0]) { cylinder(h=hStock, r=rDrive); }

		// Tracks - each one for two notes
		track(28.15, 0);
		track(30.89, 0);
		track(33.71, 0);
		track(36.425, 0);
		track(39.225, 0);
		track(42, 0);
		track(44.825, 0);
		track(47.555, 0);
		track(50.315, 0);
		track(53.11, 0);
		track(55.9, 0);

		if (hasSecondSide > 0) {
			track(28.15, 1);
			track(30.89, 1);
			track(33.71, 1);
			track(36.425, 1);
			track(39.225, 1);
			track(42, 1);
			track(44.825, 1);
			track(47.555, 1);
			track(50.315, 1);
			track(53.11, 1);
			track(55.9, 1);
		}
	}
}

// Negative for a double track
module track(inner, onSecondSide) {
	if (onSecondSide > 0) {
		translate(v = [0,0,-overlap]) {
			difference() {
				cylinder(h=hGroove+overlap, r=inner+2);
				cylinder(h=hGroove+overlap, r=inner);
			}
		}
	}
	else {
		translate(v = [0,0,hStock-hGroove]) {
			difference() {
				cylinder(h=hGroove+overlap, r=inner+2);
				cylinder(h=hGroove+overlap, r=inner);
			}
		}
	}

}

// Create a pin at a certain angle
module pin(inner, outer, angle, onSecondSide)
{
	rotate(a=angle) {
		if (onSecondSide > 0) {
			translate(v=[inner, -0.5, - overlap]) {
				# cube (size=[outer-inner, 1 ,hGroove + overlap], center=false);
			}
		} else {
			translate(v=[inner, -0.5, hStock - hGroove - overlap]) {
				# cube (size=[outer-inner, 1 ,hGroove + overlap], center=false);
			}
		}
	}
}

// Add text
module title(text, onSecondSide)
{
// Disabled as some people had trouble with it
//	if (onSecondSide>0)
//		writecylinder(text, [0,0,-hInset], radius=20, height=hStock-hInset, h=3, t=hInset, face="bottom");
//	else
//		writecylinder(text, [0,0,0], radius=20, height=hStock-hInset, h=3, t=hInset, face="top");
}

// Do the work
createDisc();
