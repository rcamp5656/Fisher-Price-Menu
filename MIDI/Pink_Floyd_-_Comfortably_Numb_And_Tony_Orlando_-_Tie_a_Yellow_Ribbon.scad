/* This file has been generated by "music box tune tracker" v1.0 on 18 Jul 2024 12:27
 * https://github.com/odrevet/music-box-tune-tracker
 * using "Fred's Fisher Price record creator" .scad template file
 * http://www.instructables.com/id/3D-printing-records-for-a-Fisher-Price-toy-record-/
 */

// writing functions by HarlanDMii
// http://www.thingiverse.com/thing:16193
use <Write.scad>

// Configuration
$fn = 100;
hStock = 5.0;
rStock = 60.58;
oDrive = 21.8;
rDrive = 1.55;
hInset = 1;
rInset = 25.6;
hGroove = 1.2;
overlap = 0.2;

hasSecondSide = 1;

// Create disc
module createDisc() {
	union() {

		createBlank();

		// Add the notes for the song. This part is dynamically generated.
		pin(27.95,29.15,33.674713228519764,0);
		pin(27.95,29.15,42.046806251775585,0);
		pin(27.95,29.15,50.41889927503139,0);
		pin(27.95,29.15,58.790992298287215,0);
		pin(27.95,29.15,67.16308532154302,0);
		pin(27.95,29.15,75.53517834479882,0);
		pin(27.95,29.15,83.90727136805465,0);
		pin(27.95,29.15,92.27936439131047,0);
		pin(27.95,29.15,100.6514574145663,0);
		pin(27.95,29.15,109.0235504378221,0);
		pin(27.95,29.15,117.39564346107791,0);
		pin(27.95,29.15,125.76773648433372,0);
		pin(27.95,29.15,134.13982950758952,0);
		pin(27.95,29.15,142.51192253084537,0);
		pin(27.95,29.15,150.88401555410118,0);
		pin(27.95,29.15,159.256108577357,0);
		pin(27.95,29.15,167.62820160061278,0);
		pin(27.95,29.15,176.0002946238686,0);
		pin(27.95,29.15,184.37238764712444,0);
		pin(27.95,29.15,192.74448067038026,0);
		pin(27.95,29.15,201.11657369363604,0);
		pin(27.95,29.15,205.302620205264,0);
		pin(27.95,29.15,213.67471322851978,0);
		pin(27.95,29.15,222.04680625177556,0);
		pin(27.95,29.15,230.41889927503138,0);
		pin(27.95,29.15,238.7909922982872,0);
		pin(27.95,29.15,247.16308532154304,0);
		pin(27.95,29.15,255.53517834479885,0);
		pin(27.95,29.15,263.90727136805464,0);
		pin(27.95,29.15,272.2793643913104,0);
		pin(27.95,29.15,280.65145741456627,0);
		pin(27.95,29.15,289.0235504378221,0);
		pin(27.95,29.15,297.3956434610779,0);
		pin(27.95,29.15,305.76773648433374,0);
		pin(27.95,29.15,314.1398295075895,0);
		pin(27.95,29.15,322.51192253084537,0);
		pin(27.95,29.15,330.88401555410115,0);
		pin(27.95,29.15,339.256108577357,0);
		pin(27.95,29.15,347.6282016006128,0);
		pin(29.15,30.349999999999998,238.9258896128279,0);
		pin(30.69,31.89,34.023843293209154,0);
		pin(30.69,31.89,101.00058747925567,0);
		pin(30.69,31.89,167.9773316653022,0);
		pin(31.89,33.09,34.136550156791806,0);
		pin(31.89,33.09,168.09003852888486,0);
		pin(33.51,34.71,339.9061630027089,0);
		pin(34.71,35.910000000000004,306.51292442149423,0);
		pin(34.71,35.910000000000004,331.6292034912617,0);
		pin(34.71,35.910000000000004,340.00129651451755,0);
		pin(36.224999999999994,37.425,239.6873379174473,0);
		pin(36.224999999999994,37.425,340.15245419651717,0);
		pin(40.225,41.425000000000004,34.86062955551268,0);
		pin(40.225,41.425000000000004,269.2792342066755,0);
		pin(40.225,41.425000000000004,332.06993188109413,0);
		pin(41.8,43.0,168.93163499965797,0);
		pin(41.8,43.0,307.0711698833789,0);
		pin(41.8,43.0,340.5595419764022,0);
		pin(43.0,44.2,35.040129891406,0);
		pin(43.0,44.2,168.99361826349903,0);
		pin(43.0,44.2,307.13315314721996,0);
		pin(43.0,44.2,340.6215252402432,0);
		pin(44.625,45.825,102.1229430659064,0);
		pin(44.625,45.825,240.26247794962734,0);
		pin(44.625,45.825,332.3555012054413,0);
		pin(48.555,49.755,102.31518156500887,0);
		pin(48.555,49.755,340.9198327277996,0);
		pin(50.114999999999995,51.315,240.53562419166417,0);
		pin(51.315,52.515,35.462866756225715,0);
		pin(51.315,52.515,303.3698435004118,0);
		pin(51.315,52.515,341.04426210506296,0);
		pin(52.91,54.11,169.49040354406065,0);
		pin(52.91,54.11,332.7462174975491,0);
		pin(54.11,55.31,102.55280060380584,0);
		pin(56.9,58.1,31.492003468874046,0);
		pin(56.9,58.1,240.79432905026937,0);
		pin(56.9,58.1,257.53851509678105,0);
		pin(56.9,58.1,270.09665463166476,0);
		pin(56.9,58.1,282.65479416654847,0);
		pin(56.9,58.1,307.7710732363159,0);
		pin(56.9,58.1,341.2594453293392,0);

		title("Pink_Floyd_-_Comfortably_Numb",0);

		pin(27.95,29.15,334.69737979473604,1);
		pin(27.95,29.15,330.5113332831081,1);
		pin(27.95,29.15,326.32528677148025,1);
		pin(27.95,29.15,322.13924025985233,1);
		pin(27.95,29.15,317.9531937482244,1);
		pin(27.95,29.15,313.76714723659654,1);
		pin(27.95,29.15,309.5811007249686,1);
		pin(27.95,29.15,305.3950542133407,1);
		pin(27.95,29.15,301.2090077017128,1);
		pin(27.95,29.15,297.0229611900849,1);
		pin(27.95,29.15,292.836914678457,1);
		pin(27.95,29.15,288.65086816682907,1);
		pin(27.95,29.15,284.46482165520115,1);
		pin(27.95,29.15,280.2787751435733,1);
		pin(27.95,29.15,276.09272863194536,1);
		pin(27.95,29.15,271.90668212031744,1);
		pin(27.95,29.15,267.7206356086895,1);
		pin(27.95,29.15,263.5345890970616,1);
		pin(27.95,29.15,259.34854258543373,1);
		pin(27.95,29.15,255.1624960738058,1);
		pin(27.95,29.15,250.9764495621779,1);
		pin(27.95,29.15,246.79040305055,1);
		pin(27.95,29.15,242.6043565389221,1);
		pin(27.95,29.15,238.41831002729415,1);
		pin(27.95,29.15,234.23226351566626,1);
		pin(27.95,29.15,230.04621700403837,1);
		pin(27.95,29.15,225.86017049241048,1);
		pin(27.95,29.15,221.67412398078255,1);
		pin(27.95,29.15,217.48807746915463,1);
		pin(27.95,29.15,213.30203095752677,1);
		pin(27.95,29.15,209.11598444589882,1);
		pin(27.95,29.15,204.92993793427095,1);
		pin(27.95,29.15,200.743891422643,1);
		pin(27.95,29.15,196.55784491101508,1);
		pin(27.95,29.15,192.37179839938722,1);
		pin(27.95,29.15,188.1857518877593,1);
		pin(27.95,29.15,183.9997053761314,1);
		pin(27.95,29.15,179.8136588645035,1);
		pin(27.95,29.15,175.62761235287556,1);
		pin(27.95,29.15,171.44156584124767,1);
		pin(27.95,29.15,167.25551932961974,1);
		pin(27.95,29.15,163.06947281799188,1);
		pin(27.95,29.15,158.88342630636396,1);
		pin(27.95,29.15,154.697379794736,1);
		pin(27.95,29.15,150.51133328310817,1);
		pin(27.95,29.15,146.32528677148022,1);
		pin(27.95,29.15,142.1392402598523,1);
		pin(27.95,29.15,137.95319374822444,1);
		pin(27.95,29.15,133.76714723659651,1);
		pin(27.95,29.15,129.58110072496862,1);
		pin(27.95,29.15,125.39505421334067,1);
		pin(27.95,29.15,121.2090077017128,1);
		pin(27.95,29.15,117.02296119008489,1);
		pin(27.95,29.15,112.83691467845696,1);
		pin(27.95,29.15,108.6508681668291,1);
		pin(27.95,29.15,104.46482165520115,1);
		pin(27.95,29.15,100.27877514357328,1);
		pin(27.95,29.15,96.09272863194536,1);
		pin(27.95,29.15,91.90668212031744,1);
		pin(27.95,29.15,87.72063560868958,1);
		pin(27.95,29.15,83.5345890970616,1);
		pin(27.95,29.15,79.34854258543373,1);
		pin(27.95,29.15,75.16249607380581,1);
		pin(27.95,29.15,70.97644956217789,1);
		pin(27.95,29.15,66.79040305055003,1);
		pin(27.95,29.15,62.604356538922104,1);
		pin(27.95,29.15,58.41831002729424,1);
		pin(27.95,29.15,54.23226351566626,1);
		pin(27.95,29.15,50.04621700403834,1);
		pin(27.95,29.15,45.860170492410475,1);
		pin(27.95,29.15,41.674123980782554,1);
		pin(27.95,29.15,37.48807746915463,1);
		pin(27.95,29.15,33.30203095752677,1);
		pin(27.95,29.15,29.115984445898846,1);
		pin(27.95,29.15,24.929937934270924,1);
		pin(27.95,29.15,20.743891422643003,1);
		pin(27.95,29.15,16.557844911015138,1);
		pin(27.95,29.15,12.371798399387217,1);
		pin(27.95,29.15,8.185751887759295,1);
		pin(29.15,30.349999999999998,284.32992434066045,1);
		pin(29.15,30.349999999999998,280.1438778290326,1);
		pin(29.15,30.349999999999998,271.77178480577675,1);
		pin(29.15,30.349999999999998,255.02759875926512,1);
		pin(29.15,30.349999999999998,246.6555057360093,1);
		pin(29.15,30.349999999999998,229.9113196894977,1);
		pin(29.15,30.349999999999998,175.4927150383349,1);
		pin(29.15,30.349999999999998,125.26015689879998,1);
		pin(29.15,30.349999999999998,66.65550573600927,1);
		pin(29.15,30.349999999999998,58.28341271275349,1);
		pin(29.15,30.349999999999998,41.5392266662418,1);
		pin(29.15,30.349999999999998,37.35318015461394,1);
		pin(29.15,30.349999999999998,28.981087131358095,1);
		pin(29.15,30.349999999999998,12.236901084846522,1);
		pin(31.89,33.09,120.74717077344073,1);
		pin(36.224999999999994,37.425,333.8010341755759,1);
		pin(40.225,41.425000000000004,166.06960300262685,1);
		pin(40.225,41.425000000000004,99.0928588165803,1);
		pin(40.225,41.425000000000004,86.5347192816966,1);
		pin(40.225,41.425000000000004,69.79053323518497,1);
		pin(40.225,41.425000000000004,44.67425416541755,1);
		pin(40.225,41.425000000000004,15.371928584022157,1);
		pin(41.8,43.0,111.53348127941175,1);
		pin(41.8,43.0,94.78929523290014,1);
		pin(41.8,43.0,82.23115569801644,1);
		pin(41.8,43.0,48.74278360499312,1);
		pin(41.8,43.0,19.440458023597785,1);
		pin(43.0,44.2,220.30870731789634,1);
		pin(44.625,45.825,216.01659181781451,1);
		pin(45.825,47.025000000000006,10.845737038931304,1);
		pin(48.555,49.755,333.03365564429345,1);
		pin(48.555,49.755,320.47551610940974,1);
		pin(48.555,49.755,307.91737657452603,1);
		pin(48.555,49.755,291.1731905280144,1);
		pin(48.555,49.755,278.6150509931307,1);
		pin(48.555,49.755,270.24295796987485,1);
		pin(48.555,49.755,236.7545858768516,1);
		pin(48.555,49.755,119.54528355127022,1);
		pin(48.555,49.755,111.17319052801437,1);
		pin(48.555,49.755,102.80109750475856,1);
		pin(48.555,49.755,94.42900448150277,1);
		pin(48.555,49.755,86.05691145824699,1);
		pin(48.555,49.755,77.68481843499114,1);
		pin(48.555,49.755,69.3127254117353,1);
		pin(48.555,49.755,56.75458587685159,1);
		pin(48.555,49.755,48.38249285359575,1);
		pin(48.555,49.755,35.82435331871204,1);
		pin(48.555,49.755,27.4522602954562,1);
		pin(48.555,49.755,19.080167272200413,1);
		pin(48.555,49.755,10.708074248944627,1);
		pin(50.114999999999995,51.315,324.58065487810325,1);
		pin(50.114999999999995,51.315,312.02251534321954,1);
		pin(50.114999999999995,51.315,295.27832929670785,1);
		pin(50.114999999999995,51.315,286.90623627345207,1);
		pin(50.114999999999995,51.315,274.34809673856836,1);
		pin(50.114999999999995,51.315,245.04577115717302,1);
		pin(50.114999999999995,51.315,228.30158511066136,1);
		pin(50.114999999999995,51.315,115.27832929670788,1);
		pin(50.114999999999995,51.315,106.90623627345207,1);
		pin(50.114999999999995,51.315,98.53414325019628,1);
		pin(50.114999999999995,51.315,90.16205022694044,1);
		pin(50.114999999999995,51.315,81.78995720368465,1);
		pin(50.114999999999995,51.315,73.41786418042881,1);
		pin(50.114999999999995,51.315,65.04577115717302,1);
		pin(50.114999999999995,51.315,52.48763162228926,1);
		pin(50.114999999999995,51.315,39.92949208740555,1);
		pin(50.114999999999995,51.315,31.557399064149763,1);
		pin(50.114999999999995,51.315,23.18530604089392,1);
		pin(50.114999999999995,51.315,14.813213017638077,1);
		pin(51.315,52.515,224.07201696470452,1);
		pin(51.315,52.515,211.51387742982078,1);
		pin(51.315,52.515,186.39759836005334,1);
		pin(51.315,52.515,173.83945882516963,1);
		pin(51.315,52.515,157.095272778658,1);
		pin(51.315,52.515,131.9789937088905,1);
		pin(51.315,52.515,119.42085417400685,1);
		pin(52.91,54.11,215.62587552570676,1);
		pin(52.91,54.11,198.88168947919516,1);
		pin(52.91,54.11,177.9514569210556,1);
		pin(52.91,54.11,161.20727087454404,1);
		pin(52.91,54.11,144.46308482803238,1);
		pin(52.91,54.11,123.5328522698928,1);
		pin(52.91,54.11,10.509596455939345,1);
		pin(54.11,55.31,332.7960366054965,1);
		pin(54.11,55.31,320.2378970706128,1);
		pin(54.11,55.31,316.0518505589849,1);
		pin(54.11,55.31,311.86580404735696,1);
		pin(54.11,55.31,307.6797575357291,1);
		pin(54.11,55.31,295.12161800084533,1);
		pin(54.11,55.31,290.9355714892174,1);
		pin(54.11,55.31,286.74952497758954,1);
		pin(54.11,55.31,282.5634784659616,1);
		pin(54.11,55.31,278.3774319543337,1);
		pin(54.11,55.31,270.0053389310779,1);
		pin(54.11,55.31,265.81929241945,1);
		pin(54.11,55.31,253.2611528845663,1);
		pin(54.11,55.31,240.70301334968258,1);
		pin(54.11,55.31,232.33092032642674,1);
		pin(54.11,55.31,223.95882730317095,1);
		pin(54.11,55.31,131.86580404735696,1);
		pin(54.11,55.31,127.67975753572904,1);
		pin(54.11,55.31,123.49371102410112,1);
		pin(54.11,55.31,119.30766451247325,1);
		pin(54.11,55.31,110.93557148921738,1);
		pin(54.11,55.31,102.56347846596157,1);
		pin(54.11,55.31,98.3774319543337,1);
		pin(54.11,55.31,94.19138544270578,1);
		pin(54.11,55.31,90.00533893107786,1);
		pin(54.11,55.31,85.81929241945,1);
		pin(54.11,55.31,81.63324590782207,1);
		pin(54.11,55.31,77.44719939619415,1);
		pin(54.11,55.31,73.26115288456623,1);
		pin(54.11,55.31,69.07510637293836,1);
		pin(54.11,55.31,64.88905986131044,1);
		pin(54.11,55.31,56.51696683805466,1);
		pin(54.11,55.31,52.330920326426735,1);
		pin(54.11,55.31,48.144873814798814,1);
		pin(54.11,55.31,43.95882730317095,1);
		pin(54.11,55.31,39.77278079154297,1);
		pin(54.11,55.31,35.58673427991505,1);
		pin(54.11,55.31,31.40068776828724,1);
		pin(54.11,55.31,27.214641256659206,1);
		pin(54.11,55.31,23.0285947450314,1);
		pin(54.11,55.31,18.842548233403477,1);
		pin(54.11,55.31,14.656501721775555,1);
		pin(54.11,55.31,10.470455210147634,1);
		pin(55.699999999999996,56.9,223.89223034723943,1);
		pin(55.699999999999996,56.9,215.5201373239836,1);
		pin(55.699999999999996,56.9,211.3340908123557,1);
		pin(55.699999999999996,56.9,207.1480443007278,1);
		pin(55.699999999999996,56.9,202.96199778909988,1);
		pin(55.699999999999996,56.9,198.77595127747196,1);
		pin(55.699999999999996,56.9,190.40385825421617,1);
		pin(55.699999999999996,56.9,186.21781174258825,1);
		pin(55.699999999999996,56.9,182.03176523096036,1);
		pin(55.699999999999996,56.9,177.84571871933244,1);
		pin(55.699999999999996,56.9,173.65967220770452,1);
		pin(55.699999999999996,56.9,152.729439649565,1);
		pin(55.699999999999996,56.9,148.5433931379371,1);
		pin(55.699999999999996,56.9,135.98525360305337,1);
		pin(55.699999999999996,56.9,131.79920709142544,1);
		pin(55.699999999999996,56.9,127.61316057979761,1);
		pin(55.699999999999996,56.9,123.42711406816966,1);
		pin(55.699999999999996,56.9,119.24106755654176,1);
		pin(56.9,58.1,332.69404304275383,1);
		pin(56.9,58.1,324.32195001949805,1);
		pin(56.9,58.1,320.1359035078701,1);
		pin(56.9,58.1,315.94985699624226,1);
		pin(56.9,58.1,311.76381048461434,1);
		pin(56.9,58.1,307.5777639729864,1);
		pin(56.9,58.1,303.3917174613585,1);
		pin(56.9,58.1,299.2056709497306,1);
		pin(56.9,58.1,295.0196244381027,1);
		pin(56.9,58.1,290.8335779264748,1);
		pin(56.9,58.1,286.64753141484687,1);
		pin(56.9,58.1,282.461484903219,1);
		pin(56.9,58.1,278.2754383915911,1);
		pin(56.9,58.1,274.08939187996316,1);
		pin(56.9,58.1,269.90334536833524,1);
		pin(56.9,58.1,265.7172988567073,1);
		pin(56.9,58.1,257.34520583345153,1);
		pin(56.9,58.1,253.1591593218236,1);
		pin(56.9,58.1,248.97311281019572,1);
		pin(56.9,58.1,244.78706629856782,1);
		pin(56.9,58.1,240.6010197869399,1);
		pin(56.9,58.1,236.41497327531198,1);
		pin(56.9,58.1,232.2289267636841,1);
		pin(56.9,58.1,223.85683374042827,1);
		pin(56.9,58.1,219.67078722880038,1);
		pin(56.9,58.1,215.48474071717246,1);
		pin(56.9,58.1,211.29869420554456,1);
		pin(56.9,58.1,207.11264769391664,1);
		pin(56.9,58.1,202.92660118228875,1);
		pin(56.9,58.1,198.74055467066083,1);
		pin(56.9,58.1,190.36846164740504,1);
		pin(56.9,58.1,186.18241513577712,1);
		pin(56.9,58.1,181.9963686241492,1);
		pin(56.9,58.1,177.81032211252128,1);
		pin(56.9,58.1,173.62427560089338,1);
		pin(56.9,58.1,165.25218257763757,1);
		pin(56.9,58.1,161.0661360660097,1);
		pin(56.9,58.1,156.88008955438175,1);
		pin(56.9,58.1,152.69404304275386,1);
		pin(56.9,58.1,148.50799653112597,1);
		pin(56.9,58.1,144.32195001949805,1);
		pin(56.9,58.1,140.13590350787013,1);
		pin(56.9,58.1,135.9498569962422,1);
		pin(56.9,58.1,131.7638104846143,1);
		pin(56.9,58.1,127.57776397298642,1);
		pin(56.9,58.1,123.3917174613585,1);
		pin(56.9,58.1,119.20567094973063,1);
		pin(56.9,58.1,110.83357792647476,1);
		pin(56.9,58.1,102.46148490321895,1);
		pin(56.9,58.1,98.27543839159108,1);
		pin(56.9,58.1,94.08939187996316,1);
		pin(56.9,58.1,89.90334536833524,1);
		pin(56.9,58.1,85.71729885670737,1);
		pin(56.9,58.1,77.34520583345153,1);
		pin(56.9,58.1,73.15915932182367,1);
		pin(56.9,58.1,68.97311281019569,1);
		pin(56.9,58.1,64.78706629856782,1);
		pin(56.9,58.1,60.6010197869399,1);
		pin(56.9,58.1,56.414973275312036,1);
		pin(56.9,58.1,52.228926763684115,1);
		pin(56.9,58.1,48.042880252056136,1);
		pin(56.9,58.1,39.67078722880035,1);
		pin(56.9,58.1,35.48474071717243,1);
		pin(56.9,58.1,31.298694205544564,1);
		pin(56.9,58.1,27.112647693916642,1);
		pin(56.9,58.1,22.92660118228872,1);
		pin(56.9,58.1,18.7405546706608,1);
		pin(56.9,58.1,14.554508159032935,1);
		pin(56.9,58.1,10.368461647405013,1);

		title("Tony_Orlando_-_Tie_a_Yellow_Ribbon",1);


	}
}

// Create the blank, ready for dynamically added pins
module createBlank() {

	difference() {

		// stock
		cylinder(h=hStock, r=rStock);

		// top cutout
		translate(v = [0,0,hStock-hInset+overlap]) {
			cylinder(h=hInset + overlap, r=rInset);
		}

		// Bottom cutout lets the disc sit flatter, but some printers my struggle with the overhang
		translate(v = [0,0,-overlap]) {
			cylinder(h=hInset + overlap, r=rInset);
		}

		// Centre hole
		cylinder(h=hStock, r=3.22);

		// Drive holes
		translate(v = [0,oDrive,0]) { cylinder(h=hStock, r=rDrive); }
		translate(v = [0,-oDrive,0]) { cylinder(h=hStock, r=rDrive); }
		translate(v = [oDrive,0,0]) { cylinder(h=hStock, r=rDrive); }
		translate(v = [-oDrive,0,0]) { cylinder(h=hStock, r=rDrive); }

		// Tracks - each one for two notes
		track(28.15, 0);
		track(30.89, 0);
		track(33.71, 0);
		track(36.425, 0);
		track(39.225, 0);
		track(42, 0);
		track(44.825, 0);
		track(47.555, 0);
		track(50.315, 0);
		track(53.11, 0);
		track(55.9, 0);

		if (hasSecondSide > 0) {
			track(28.15, 1);
			track(30.89, 1);
			track(33.71, 1);
			track(36.425, 1);
			track(39.225, 1);
			track(42, 1);
			track(44.825, 1);
			track(47.555, 1);
			track(50.315, 1);
			track(53.11, 1);
			track(55.9, 1);
		}
	}
}

// Negative for a double track
module track(inner, onSecondSide) {
	if (onSecondSide > 0) {
		translate(v = [0,0,-overlap]) {
			difference() {
				cylinder(h=hGroove+overlap, r=inner+2);
				cylinder(h=hGroove+overlap, r=inner);
			}
		}
	}
	else {
		translate(v = [0,0,hStock-hGroove]) {
			difference() {
				cylinder(h=hGroove+overlap, r=inner+2);
				cylinder(h=hGroove+overlap, r=inner);
			}
		}
	}

}

// Create a pin at a certain angle
module pin(inner, outer, angle, onSecondSide)
{
	rotate(a=angle) {
		if (onSecondSide > 0) {
			translate(v=[inner, -0.5, - overlap]) {
				# cube (size=[outer-inner, 1 ,hGroove + overlap], center=false);
			}
		} else {
			translate(v=[inner, -0.5, hStock - hGroove - overlap]) {
				# cube (size=[outer-inner, 1 ,hGroove + overlap], center=false);
			}
		}
	}
}

module title(text, onSecondSide)
{
	if (onSecondSide>0)
		writecylinder(text, [0,0,-hInset], radius=20, height=hStock-hInset, h=3, t=hInset, face="bottom");
	else
		writecylinder(text, [0,0,0], radius=20, height=hStock-hInset, h=3, t=hInset, face="top");
}



// Do the work
createDisc();
